#!/usr/bin/env node

const { exec } = require("child_process");

// const query = `query {
//   review: search(type: ISSUE  query: "is:open is:pr review-requested:@me" first:100) {
//     nodes{
//       ... on PullRequest {
//         number
//         title
//       }
//     }
//   }
//   fix: search(type: ISSUE  query: "is:open is:pr author:@me review:changes_requested" first:100) {
//     nodes{
//       ... on PullRequest {
//         number
//         title
//       }
//     }
//   }
// }`;

const query = `{
  review: search(
    type: ISSUE,
    query: "is:open is:pr author:@me",
    first: 100
  ) {
    nodes {
      ... on PullRequest {
        number
        title
        comments(last:1) {
          nodes {
            updatedAt
          }
        }
      }
    }
  }
}
`;

exec(`gh api graphql -f query='${query}'`, (error, stdout, stderr) => {
  if (error) {
    console.log(`error: ${error.message}`);
    process.exit(1);
  }
  if (stderr) {
    console.log(`stderr: ${stderr}`);
    process.exit(1);
  }

  const data = JSON.parse(stdout).data;
  console.log(data.review.nodes[0].comments.nodes);

  // console.log(
  //   Object.entries(data)
  //     .filter(([title, prs]) => prs.nodes.length > 0)
  //     .map(
  //       ([title, prs]) =>
  //         `== ${title.toUpperCase()} ==\n` +
  //         prs.nodes.map((pr) => `#${pr.number}: ${pr.title}`).join("\n")
  //     )
  //     .join("\n\n")
  // );
});
