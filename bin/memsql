#!/bin/sh

env_file() {
    if [ ! -z "$1" ]; then
        if [ ! -f "$1" ]; then
            echo "environment file '$1' does not exist."
            exit 1
        fi
        echo "using environment file '$1'."
        export $(cat "$1" | sed 's/#.*//g' | xargs)
    fi
}

start_mysql() {
    # source env_file $1

    if [ -z "$DB_PASSWORD" ]; then
        DB_PASSWORD=password
    fi
    if [ -z "$DB_DATABASE" ]; then
        DB_DATABASE=mero
    fi
    if [ -z "$DB_PORT" ]; then
        DB_PORT=4306
    fi

    mkdir -p /dev/shm/mysql-test

    echo 'DROP DATABASE IF EXISTS `mero_test`; CREATE DATABASE `mero_test`;' > /tmp/create-mero-db.sql

    echo "mysql database: '$DB_DATABASE', password: '$DB_PASSWORD', port '$DB_PORT'"

    docker run \
        --name memsql-mysql \
        -e MYSQL_DATABASE="$DB_DATABASE" \
        -e MYSQL_ROOT_PASSWORD="$DB_PASSWORD" \
        -p "$DB_PORT":3306 \
        -v /dev/shm/memsql-mysql:/var/lib/mysql \
        -v /tmp/create-mero-db.sql:/docker-entrypoint-initdb.d/create-mero-db.sql \
        -d \
        mysql:8
}

stop_mysql() {
    docker stop memsql-mysql
    docker rm memsql-mysql
}

restart_mysql() {
    stop_mysql
    start_mysql $1
    stop_mysql
    start_mysql $1
}

start_timescale() {
    # source env_file $1

    if [ -z "$TIMESCALE_DB_PASSWORD" ]; then
        TIMESCALE_DB_PASSWORD=password
    fi
    if [ -z "$TIMESCALE_DB_DATABASE" ]; then
        TIMESCALE_DB_DATABASE=mero_test
    fi
    if [ -z "$TIMESCALE_DB_PORT" ]; then
        TIMESCALE_DB_PORT=6432
    fi
    if [ -z "$TIMESCALE_DB_USERNAME" ]; then
        TIMESCALE_DB_USERNAME=mero
    fi

    mkdir -p /dev/shm/memsql-timescale

    echo "timescale database: '$TIMESCALE_DB_DATABASE', password: '$TIMESCALE_DB_PASSWORD', port '$TIMESCALE_DB_PORT'"

    docker run \
        --name memsql-timescale \
        -e POSTGRES_DB="$TIMESCALE_DB_DATABASE" \
        -e POSTGRES_PASSWORD="$TIMESCALE_DB_PASSWORD" \
        -e POSTGRES_USER="$TIMESCALE_DB_USERNAME" \
        -p "$TIMESCALE_DB_PORT":5432 \
        -v /dev/shm/memsql-timescale:/var/lib/postgresql/data \
        -d \
        timescale/timescaledb:latest-pg13
}

stop_timescale() {
    docker stop memsql-timescale
    docker rm memsql-timescale
}

restart_timescale() {
    stop_timescale
    start_timescale $1
    stop_timescale
    start_timescale $1
}

help() {
    echo "MemSQL is a MySQL server that runs 100% in memory for running tests.

Usage:
    memsql <command>

Commands:
    start [.env file]    start the server using the password from the enviroment
                           file or 'password' if no envirment file is given
    stop                 stop and clean up the server
    restart [.env file]  shortcut for running stop then start
    help                 show this message"
}

case "$1" in
    "start-mysql") start_mysql "$2";;
    "stop-mysql") stop_mysql;;
    "restart-mysql") restart_mysql "$2";;

    "start-timescale") start_timescale "$2";;
    "stop-timescale") stop_timescale;;
    "restart-timescale") restart_timescale "$2";;

    "start") start_mysql "$2"; start_timescale "$2";;
    "stop") stop_mysql; stop_timescale;;
    "restart") restart_mysql "$2"; restart_timescale "$2";;

    "help") help;;
    *) help; exit 1 ;;
esac
